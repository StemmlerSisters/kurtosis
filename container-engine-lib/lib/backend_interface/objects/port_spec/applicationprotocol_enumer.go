// Code generated by "enumer -transform=lower -type=ApplicationProtocol"; DO NOT EDIT.

package port_spec

import (
	"fmt"
	"strings"
)

const _ApplicationProtocolName = "httphttps"

var _ApplicationProtocolIndex = [...]uint8{0, 4, 9}

const _ApplicationProtocolLowerName = "httphttps"

func (i ApplicationProtocol) String() string {
	if i < 0 || i >= ApplicationProtocol(len(_ApplicationProtocolIndex)-1) {
		return fmt.Sprintf("ApplicationProtocol(%d)", i)
	}
	return _ApplicationProtocolName[_ApplicationProtocolIndex[i]:_ApplicationProtocolIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _ApplicationProtocolNoOp() {
	var x [1]struct{}
	_ = x[HTTP-(0)]
	_ = x[HTTPS-(1)]
}

var _ApplicationProtocolValues = []ApplicationProtocol{HTTP, HTTPS}

var _ApplicationProtocolNameToValueMap = map[string]ApplicationProtocol{
	_ApplicationProtocolName[0:4]:      HTTP,
	_ApplicationProtocolLowerName[0:4]: HTTP,
	_ApplicationProtocolName[4:9]:      HTTPS,
	_ApplicationProtocolLowerName[4:9]: HTTPS,
}

var _ApplicationProtocolNames = []string{
	_ApplicationProtocolName[0:4],
	_ApplicationProtocolName[4:9],
}

// ApplicationProtocolString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func ApplicationProtocolString(s string) (ApplicationProtocol, error) {
	if val, ok := _ApplicationProtocolNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _ApplicationProtocolNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to ApplicationProtocol values", s)
}

// ApplicationProtocolValues returns all values of the enum
func ApplicationProtocolValues() []ApplicationProtocol {
	return _ApplicationProtocolValues
}

// ApplicationProtocolStrings returns a slice of all String values of the enum
func ApplicationProtocolStrings() []string {
	strs := make([]string, len(_ApplicationProtocolNames))
	copy(strs, _ApplicationProtocolNames)
	return strs
}

// IsAApplicationProtocol returns "true" if the value is listed in the enum definition. "false" otherwise
func (i ApplicationProtocol) IsAApplicationProtocol() bool {
	for _, v := range _ApplicationProtocolValues {
		if i == v {
			return true
		}
	}
	return false
}
