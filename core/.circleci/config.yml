version: 2.1

executors:
  ubuntu_vm:
    machine:
      image: ubuntu-1604:202007-01
      # DO NOT USE THIS YET! This costs 200 credits *per job run* so is extremely expensive for the free plan, but we can turn it on one day if we get more credits
      # docker_layer_caching: true

# NOTE: Because CircleCI jobs run on separate machines from each other, we duplicate steps (like checkout) between jobs. This is because doing the "correct" DRY
#  refactoring of, "one job for checkout, one job for build Docker image, etc." would require a) persisting files between jobs and b) persisting Docker images between
#  jobs. Both are annoying (saving/loading workspaces require re-downloading the workspace over the network, and there doesn't seem to be a good way to do Docker
#  images), so we run everything inside a single job.
# See also: https://discuss.circleci.com/t/can-docker-images-be-preserved-between-jobs-in-a-workflow-without-a-manual-load-save/23388/12
jobs:
  validate:
    executor: ubuntu_vm
    steps:
      - checkout

      # There's no way to get the base branch in CircleCI, so we hardcode develop :( When CircleCI has a way to do get the base branch, use that instead
      # The --exit-code command will return 0 with no diff, and 1 when a diff exists
      - run: ! git diff --exit-code develop...HEAD CHANGELOG.md

      # Docker is restricting anonymous image pulls, so we log in before we do any pulling
      - run: "docker login -u ${DOCKER_USERNAME} -p ${DOCKER_PASSWORD}"

      # As of 2020-08-30, the VMs we build on only have 2 cores so we set parallelism to 2
      - run: scripts/build_and_run.sh all --env PARALLELISM=2 --env CLIENT_ID=${KURTOSIS_INTERNAL_CI_CLIENT_ID} --env CLIENT_SECRET=${KURTOSIS_INTERNAL_CI_CLIENT_SECRET}

  push_docker_images:
    environment:
      KURTOSIS_ORG: "kurtosistech"
      API_IMAGE_REPO: "${kurtosis-core_api"
      INITIALIZER_IMAGE_REPO: "kurtosis-core_api"
    executor: ubuntu_vm
    steps:
      - checkout
      - run: "docker login -u ${DOCKER_USERNAME} -p ${DOCKER_PASSWORD}"
      - run: scripts/build_and_run.sh build
      - when:
          condition: "<<pipeline.git.tag>>"
          steps:
            - run: echo 'export TAG_NAME=<<pipeline.git.tag>>' >> ${BASH_ENV}

            # When we run as the result of a tag build, the built images get a tag called "HEAD" so we need to re-tag to the X.Y.Z name
            - run: "docker tag kurtosistech/kurtosis-core_api:HEAD docker tag kurtosistech/kurtosis-core-api:<<pipeline.git.tag>>"
            - run: "docker tag kurtosistech/kurtosis-core_initializer:HEAD docker tag kurtosistech/kurtosis-core-initializer:<<pipeline.git.tag>>"
      - unless:
          condition: "<<pipeline.git.tag>>"
          steps:
            - run: echo 'export TAG_NAME=<<pipeline.git.branch>>' >> ${BASH_ENV}
      - run: "docker push kurtosistech/kurtosis-core_api:${TAG_NAME}"
      - run: "docker push kurtosistech/kurtosis-core_initializer:${TAG_NAME}"

workflows:
  build:
    jobs:
      # If we start using too many CircleCI credits, we can exclude develop and master from validation
      - validate
      - push_docker_images:
          filters:
            branches:
              only:
                - develop
                - master
            tags: 
              only: /^[0-9]+\.[0-9]+\.[0-9]+$/
