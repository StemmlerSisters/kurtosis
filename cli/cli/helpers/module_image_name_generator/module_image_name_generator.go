/*
 * Copyright (c) 2022 - present Kurtosis Technologies Inc.
 * All Rights Reserved.
 */

package module_image_name_generator

import (
	"fmt"
	"github.com/kurtosis-tech/stacktrace"
	"regexp"
	"time"
)

const (
	//TODO remove this constant
	ModuleImageNameMaxLength      = 63 // If changing this, change also the regexp AllowedEnclaveIdCharsRegexStr below
	AllowedEnclaveIdCharsRegexStr = `^[-A-Za-z0-9.]{1,63}$` //TODO publish and use the constant added in the engine's server
	//TODO and add the regex string in all the CLI command instructions were a new enclaveId will be passed on

	allowedModuleImageNameCharsRegexStr = `^[-A-Za-z0-9.]{1,63}$`

	kurtosisPrefix = "kt"
	// YYYY-MM-DDTHH-MM-SS-sss
	executionTimestampFormat = "2006-01-02T15-04-05-000"
)

func NewAutogeneratedImageName() string {
	return fmt.Sprintf(
		"%v%v",
		kurtosisPrefix,
		time.Now().Format(executionTimestampFormat),
	)
}

//TODO make it private
func ValidateImageName(imageName string) error {
	validImageName, err := regexp.Match(allowedModuleImageNameCharsRegexStr, []byte(imageName))
	if err != nil {
		return stacktrace.Propagate(
			err,
			"An error occurred validating the module image name '%v' matches allowed module image name regex '%v'",
			imageName,
			allowedModuleImageNameCharsRegexStr,
		)
	}
	if !validImageName {
		return stacktrace.NewError(
			"Module image name '%v' doesn't match allowed module image name regex '%v'",
			imageName,
			allowedModuleImageNameCharsRegexStr,
		)
	}
	return nil
}
