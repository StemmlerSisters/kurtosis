openapi: 3.0.0

info:
  title: Enclave API
  description: API to manipulate the enclaves
  version: 0.1.0

paths:

  /enclaves/{enclave_identifier}/starlark:
    get:
      description: Get last Starlark run
      parameters:
        - $ref: './api_types.yaml#/components/parameters/enclave_identifier'
      responses:
        default:
          $ref: '#/components/responses/NotOk'
        "200":
          description: Successful request
          content:
            application/json:
              schema:
                $ref: "./api_types.yaml#/components/schemas/StarlarkDescription"

  /enclaves/{enclave_identifier}/starlark/packages:
    post:
      description: Uploads a Starlark package. This step is required before the package can be executed with RunStarlarkPackage
      parameters:
        - $ref: './api_types.yaml#/components/parameters/enclave_identifier'
      requestBody:
        $ref: "./api_types.yaml#/components/requestBodies/fileUploadBody"
      responses:
        default:
          $ref: '#/components/responses/NotOk'
        "200":
          description: Success

  /enclaves/{enclave_identifier}/starlark/packages/{package_id}:
    post:
      description: Executes a Starlark script on the user's behalf
      parameters:
        - $ref: './api_types.yaml#/components/parameters/enclave_identifier'
        - $ref: './api_types.yaml#/components/parameters/package_id'
        - $ref: './api_types.yaml#/components/parameters/retrieve_logs_async'
      requestBody:
        content:
          application/json:
            schema:
              $ref: "./api_types.yaml#/components/schemas/RunStarlarkPackage"
        required: true
      responses:
        default:
          $ref: '#/components/responses/NotOk'
        "200":
          description: Successful request
          content:
            application/json:
              schema:
                $ref: "./api_types.yaml#/components/schemas/StarlarkRunResponse"

  /enclaves/{enclave_identifier}/starlark/scripts:
    post:
      description: Executes a Starlark script on the user's behalf
      parameters:
        - $ref: './api_types.yaml#/components/parameters/enclave_identifier'
        - $ref: './api_types.yaml#/components/parameters/retrieve_logs_async'
      requestBody:
        content:
          application/json:
            schema:
              $ref: "./api_types.yaml#/components/schemas/RunStarlarkScript"
        required: true
      responses:
        default:
          $ref: '#/components/responses/NotOk'
        "200":
          description: Successful request
          content:
            application/json:
              schema:
                $ref: "./api_types.yaml#/components/schemas/StarlarkRunResponse"

  /enclaves/{enclave_identifier}/services/{service_identifier}:
    get:
      parameters:
        - $ref: './api_types.yaml#/components/parameters/enclave_identifier'
        - $ref: './api_types.yaml#/components/parameters/service_identifier'
      responses:
        default:
          $ref: '#/components/responses/NotOk'
        "200":
          description: Successful request
          content:
            application/json:
              schema:
                $ref: "./api_types.yaml#/components/schemas/ServiceInfo"

  /enclaves/{enclave_identifier}/services/history:
    get:
      description: Returns information about all existing & historical services
      parameters:
        - $ref: './api_types.yaml#/components/parameters/enclave_identifier'
      responses:
        default:
          $ref: '#/components/responses/NotOk'
        "200":
          description: Successful request
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "./api_types.yaml#/components/schemas/ServiceIdentifiers"

  /enclaves/{enclave_identifier}/services:
    get:
      parameters:
        - $ref: './api_types.yaml#/components/parameters/enclave_identifier'
        - in: query
          name: services
          schema:
            type: array
            items:
              type: string
          description: Select services to get information
      responses:
        default:
          $ref: '#/components/responses/NotOk'
        "200":
          description: Successful request
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: "./api_types.yaml#/components/schemas/ServiceInfo"

  /enclaves/{enclave_identifier}/services/{service_identifier}/command:
    post:
      description: Executes the given command inside a running container
      parameters:
        - $ref: './api_types.yaml#/components/parameters/enclave_identifier'
        - $ref: './api_types.yaml#/components/parameters/service_identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: "./api_types.yaml#/components/schemas/ExecCommand"
        description: Exec Command
        required: true
      responses:
        default:
          $ref: '#/components/responses/NotOk'
        "200":
          description: Successful request
          content:
            application/json:
              schema:
                $ref: "./api_types.yaml#/components/schemas/ExecCommandResult"

  /enclaves/{enclave_identifier}/services/{service_identifier}/endpoints/{port_number}/availability:
    get:
      description: Block until the given HTTP endpoint returns available, calling it through a HTTP request
      parameters:
        - $ref: './api_types.yaml#/components/parameters/enclave_identifier'
        - $ref: './api_types.yaml#/components/parameters/service_identifier'
        - $ref: './api_types.yaml#/components/parameters/port_number'
        - $ref: './api_types.yaml#/components/parameters/http_method'
        - $ref: './api_types.yaml#/components/parameters/path'
        - $ref: './api_types.yaml#/components/parameters/initial_delay_milliseconds'
        - $ref: './api_types.yaml#/components/parameters/retries'
        - $ref: './api_types.yaml#/components/parameters/retries_delay_milliseconds'
        - $ref: './api_types.yaml#/components/parameters/expected_response'
        - $ref: './api_types.yaml#/components/parameters/request_body'
      responses:
        "200":
          description: Success

  /enclaves/{enclave_identifier}/artifacts:
    get:
      description: List all files artifacts
      parameters:
        - $ref: './api_types.yaml#/components/parameters/enclave_identifier'
      responses:
        default:
          $ref: '#/components/responses/NotOk'
        "200":
          description: Successful request
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "./api_types.yaml#/components/schemas/FileArtifactReference"

  /enclaves/{enclave_identifier}/artifacts/{artifact_identifier}:
    get:
      parameters:
        - $ref: './api_types.yaml#/components/parameters/enclave_identifier'
        - $ref: './api_types.yaml#/components/parameters/artifact_identifier'
      description: Inspect the content of a file artifact
      responses:
        default:
          $ref: '#/components/responses/NotOk'
        "200":
          description: Successful request
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "./api_types.yaml#/components/schemas/FileArtifactDescription"

  /enclaves/{enclave_identifier}/artifacts/{artifact_identifier}/download:
    get:
      description: Downloads a files artifact from the Kurtosis File System
      parameters:
        - $ref: './api_types.yaml#/components/parameters/enclave_identifier'
        - $ref: './api_types.yaml#/components/parameters/artifact_identifier'
      responses:
        default:
          $ref: '#/components/responses/NotOk'
        "200":
          description: Successful request
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary

  /enclaves/{enclave_identifier}/artifacts/local-file:
    post:
      description: Uploads a files artifact to the Kurtosis File System
      parameters:
        - $ref: './api_types.yaml#/components/parameters/enclave_identifier'
      requestBody:
        $ref: "./api_types.yaml#/components/requestBodies/fileUploadBody"
      responses:
        default:
          $ref: '#/components/responses/NotOk'
        "200":
          description: Successful request
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: "./api_types.yaml#/components/schemas/FileArtifactReference"

  /enclaves/{enclave_identifier}/artifacts/remote-file:
    post:
      description: Tells the API container to download a files artifact from the web to the Kurtosis File System
      parameters:
        - $ref: './api_types.yaml#/components/parameters/enclave_identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: "./api_types.yaml#/components/schemas/StoreWebFilesArtifact"
        description: Store Web Files Artifact
        required: true
      responses:
        default:
          $ref: '#/components/responses/NotOk'
        "200":
          description: Successful request
          content:
            application/json:
              schema:
                $ref: "./api_types.yaml#/components/schemas/FileArtifactReference"

  /enclaves/{enclave_identifier}/artifacts/services/{service_identifier}:
    post:
      description: Tells the API container to copy a files artifact from a service to the Kurtosis File System
      parameters:
        - $ref: './api_types.yaml#/components/parameters/enclave_identifier'
        - $ref: './api_types.yaml#/components/parameters/service_identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: "./api_types.yaml#/components/schemas/StoreFilesArtifactFromService"
        required: true
      responses:
        default:
          $ref: '#/components/responses/NotOk'
        "200":
          description: Successful request
          content:
            application/json:
              schema:
                $ref: "./api_types.yaml#/components/schemas/FileArtifactReference"

  /enclaves/{enclave_identifier}/services/connection:
    post:
      description: User services port forwarding
      parameters:
        - $ref: './api_types.yaml#/components/parameters/enclave_identifier'
      requestBody:
        content:
          application/json:
            schema:
              $ref: "./api_types.yaml#/components/schemas/Connect"
        required: true
      responses:
        default:
          $ref: '#/components/responses/NotOk'
        "200":
          description: Successful request

components:

  responses:

    NotOk:
      description: Unexpected error
      content:
        application/json:
          schema:
            $ref: './api_types.yaml#/components/schemas/ResponseInfo'
            required: true
