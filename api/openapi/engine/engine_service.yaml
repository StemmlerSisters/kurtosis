openapi: 3.0.0
info:
  title: Engine API
  version: 1.0.0
paths:
  /engine/info:
    get:
      summary: Get Engine Info
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEngineInfoResponse'

  /enclaves:
    get:
      summary: Get Enclaves
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEnclavesResponse'
                
    post:
      summary: Create Enclave
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEnclaveArgs'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateEnclaveResponse'
                
    delete:
      summary: Delete Enclaves
      parameters:
        - name: remove_all
          in: query
          required: false
          description: If true, remove all enclaves. Default is false
          schema:
            type: boolean
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CleanResponse'
                
  /enclaves/historical:
    get:
      summary: Get Historical Enclaves
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetExistingAndHistoricalEnclaveIdentifiersResponse'

  /enclaves/{enclave_identifier}:
    get:
      summary: Get Enclave Info
      parameters:
        - name: enclave_identifier
          in: path
          required: true
          description: UUID, shortened UUID, or name of the enclave
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnclaveInfo'



    delete:
      summary: Destroy Enclave
      parameters:
        - name: enclave_identifier
          in: path
          required: true
          description: UUID, shortened UUID, or name of the enclave
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object

  /enclaves/{enclave_identifier}/logs:
    post:
      summary: Get Service Logs
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetServiceLogsArgs'
      parameters:
        - name: enclave_identifier
          in: path
          required: true
          description: UUID, shortened UUID, or name of the enclave
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetServiceLogsResponse'

  /enclaves/{enclave_identifier}/stop:
    post:
      summary: Stop Enclave
      parameters:
        - name: enclave_identifier
          in: path
          required: true
          description: UUID, shortened UUID, or name of the enclave
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object



components:
  schemas:
    GetEngineInfoResponse:
      type: object
      properties:
        engine_version:
          type: string

    GetEnclavesResponse:
      type: object
      properties:
        enclave_info:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/EnclaveInfo'

    GetExistingAndHistoricalEnclaveIdentifiersResponse:
      type: object
      properties:
        allIdentifiers:
          type: array
          items:
            $ref: '#/components/schemas/EnclaveIdentifiers'

    CreateEnclaveArgs:
      type: object
      properties:
        enclave_name:
          type: string
        api_container_version_tag:
          type: string
        api_container_log_level:
          type: string
        mode:
          type: string
          enum:
            - TEST
            - PRODUCTION

    CreateEnclaveResponse:
      type: object
      properties:
        enclave_info:
          $ref: '#/components/schemas/EnclaveInfo'

    EnclaveInfo:
      type: object
      properties:
        enclave_uuid:
          type: string
        name:
          type: string
        shortened_uuid:
          type: string
        containers_status:
          type: integer
        api_container_status:
          type: integer
        api_container_info:
          $ref: '#/components/schemas/EnclaveAPIContainerInfo'
        api_container_host_machine_info:
          $ref: '#/components/schemas/EnclaveAPIContainerHostMachineInfo'
        creation_time:
          $ref: '#/components/schemas/Timestamp'
        mode:
          type: string
          enum:
            - TEST
            - PRODUCTION

    EnclaveAPIContainerInfo:
      type: object
      properties:
        container_id:
          type: string
        ip_inside_enclave:
          type: string
        grpc_port_inside_enclave:
          type: integer
        bridge_ip_address:
          type: string

    EnclaveAPIContainerHostMachineInfo:
      type: object
      properties:
        ip_on_host_machine:
          type: string
        grpc_port_on_host_machine:
          type: integer

    EnclaveIdentifiers:
      type: object
      properties:
        enclave_uuid:
          type: string
        name:
          type: string
        shortened_uuid:
          type: string

    EnclaveNameAndUuid:
      type: object
      properties:
        name:
          type: string
        uuid:
          type: string

    CleanResponse:
      type: object
      properties:
        removed_enclave_name_and_uuids:
          type: array
          items:
            $ref: '#/components/schemas/EnclaveNameAndUuid'

    GetServiceLogsArgs:
      type: object
      properties:
        service_uuid_set:
          type: object
          additionalProperties:
            type: boolean
        follow_logs:
          type: boolean
        conjunctive_filters:
          type: array
          items:
            $ref: '#/components/schemas/LogLineFilter'
        return_all_logs:
          type: boolean
        num_log_lines:
          type: integer

    GetServiceLogsResponse:
      type: object
      properties:
        service_logs_by_service_uuid:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/LogLine'
        not_found_service_uuid_set:
          type: object
          additionalProperties:
            type: boolean

    LogLine:
      type: object
      properties:
        line:
          type: array
          items:
            type: string
        timestamp:
          $ref: '#/components/schemas/Timestamp'

    LogLineFilter:
      type: object
      properties:
        operator:
          type: integer
        text_pattern:
          type: string

    Timestamp:
      type: string
      format: date-time
