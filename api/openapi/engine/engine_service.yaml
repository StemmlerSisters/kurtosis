openapi: 3.0.0

info:
  title: Engine API
  version: 0.1.0

paths:
  /engine/info:
    get:
      summary: Get Engine Info
      responses:
        default:
          $ref: '#/components/responses/NotOk'
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EngineInfo'

  /enclaves:
    get:
      summary: Get Enclaves
      responses:
        default:
          $ref: '#/components/responses/NotOk'
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  $ref: '#/components/schemas/EnclaveInfo'
                
    post:
      summary: Create Enclave
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateEnclave'
      responses:

        default:
          $ref: '#/components/responses/NotOk'
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnclaveInfo'
                
    delete:
      summary: Delete Enclaves
      parameters:
        - $ref: '#/components/parameters/remove_all'
      responses:
        default:
          $ref: '#/components/responses/NotOk'
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletionSummary'
                
  /enclaves/historical:
    get:
      summary: Get Historical Enclaves
      responses:
        default:
          $ref: '#/components/responses/NotOk'
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EnclaveIdentifiers'

  /enclaves/{enclave_identifier}:
    get:
      summary: Get Enclave Info
      parameters:
        - $ref: '#/components/parameters/enclave_identifier'
      responses:
        default:
          $ref: '#/components/responses/NotOk'
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnclaveInfo'

    delete:
      summary: Destroy Enclave
      parameters:
        - $ref: '#/components/parameters/enclave_identifier'
      responses:
        default:
          $ref: '#/components/responses/NotOk'
        '200':
          description: Successful response

  /enclaves/{enclave_identifier}/status:
    get:
      summary: Get enclave status
      parameters:
        - $ref: '#/components/parameters/enclave_identifier'
      responses:
        default:
          $ref: '#/components/responses/NotOk'
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnclaveContainersStatus'
    post:
      summary: Set enclave status
      parameters:
        - $ref: '#/components/parameters/enclave_identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnclaveTargetStatus'
      responses:
        default:
          $ref: '#/components/responses/NotOk'
        '200':
          description: Successful response

# =========================================================================================================================
# =========================================================================================================================
# > > > > > > > > > > > > > > > > > > > > > > > > Data Models < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < < 
# =========================================================================================================================
# =========================================================================================================================

components:

  responses:

    NotOk:
      description: Unexpected error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResponseInfo'
            required: true

  parameters:

    enclave_identifier:
      name: enclave_identifier
      in: path
      required: true
      description: UUID, shortened UUID, or name of the enclave
      schema:
        type: string
    
    remove_all:
      name: remove_all
      in: query
      required: false
      description: If true, remove all enclaves. Default is false
      schema:
        type: boolean

  schemas:

    ResponseType:
      type: string
      enum:
        - ERROR
        - INFO
        - WARNING 

    ResponseInfo:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/ResponseType'
        message:
          type: string
        code:
          type: integer
          format: uint32
      required:
        - type
        - message
        - code

    EngineInfo:
      type: object
      properties:
        engine_version:
          type: string
      required:
        - engine_version

    CreateEnclave:
      type: object
      properties:
        enclave_name:
          type: string
        api_container_version_tag:
          type: string
        api_container_log_level:
          type: string
        mode:
          $ref: '#/components/schemas/EnclaveMode'
    
    EnclaveMode:
      type: string
      enum:
        - TEST
        - PRODUCTION
    
    EnclaveContainersStatus:
      type: string
      enum:
        - RUNNING
        - STOPPED
        - EMPTY
    
    EnclaveTargetStatus:
      type: string
      enum:
        - STOP
    
    ApiContainerStatus:
      type: string
      enum:
        - RUNNING
        - STOPPED
        - NON_EXISTENT

    EnclaveInfo:
      type: object
      properties:
        enclave_uuid:
          type: string
        name:
          type: string
        shortened_uuid:
          type: string
        containers_status:
          $ref: '#/components/schemas/EnclaveContainersStatus'
        api_container_status:
          $ref: '#/components/schemas/ApiContainerStatus'
        api_container_info:
          $ref: '#/components/schemas/EnclaveAPIContainerInfo'
        api_container_host_machine_info:
          $ref: '#/components/schemas/EnclaveAPIContainerHostMachineInfo'
        creation_time:
          $ref: '#/components/schemas/Timestamp'
        mode:
          $ref: '#/components/schemas/EnclaveMode'
      required:
        - enclave_uuid
        - name
        - shortened_uuid
        - containers_status
        - api_container_status
        - creation_time
        - mode

    EnclaveAPIContainerInfo:
      type: object
      properties:
        container_id:
          type: string
        ip_inside_enclave:
          type: string
        grpc_port_inside_enclave:
          type: integer
        bridge_ip_address:
          type: string
      required:
        - container_id
        - ip_inside_enclave
        - grpc_port_inside_enclave
        - bridge_ip_address

    EnclaveAPIContainerHostMachineInfo:
      type: object
      properties:
        ip_on_host_machine:
          type: string
        grpc_port_on_host_machine:
          type: integer
      required:
        - ip_on_host_machine
        - grpc_port_on_host_machine

    EnclaveIdentifiers:
      type: object
      properties:
        enclave_uuid:
          type: string
        name:
          type: string
        shortened_uuid:
          type: string
      required:    
        - enclave_uuid
        - name
        - shortened_uuid

    EnclaveNameAndUuid:
      type: object
      properties:
        name:
          type: string
        uuid:
          type: string
      required:    
        - name
        - uuid

    DeletionSummary:
      type: object
      properties:
        removed_enclave_name_and_uuids:
          type: array
          items:
            $ref: '#/components/schemas/EnclaveNameAndUuid'

    Timestamp:
      type: string
      format: date-time