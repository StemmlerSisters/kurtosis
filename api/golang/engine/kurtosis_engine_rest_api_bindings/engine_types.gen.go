// Package kurtosis_engine_rest_api_bindings provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version (devel) DO NOT EDIT.
package kurtosis_engine_rest_api_bindings

import (
	"time"
)

// Defines values for ApiContainerStatus.
const (
	ApiContainerStatusNONEXISTENT ApiContainerStatus = "NON_EXISTENT"
	ApiContainerStatusRUNNING     ApiContainerStatus = "RUNNING"
	ApiContainerStatusSTOPPED     ApiContainerStatus = "STOPPED"
)

// Defines values for EnclaveContainersStatus.
const (
	EnclaveContainersStatusEMPTY   EnclaveContainersStatus = "EMPTY"
	EnclaveContainersStatusRUNNING EnclaveContainersStatus = "RUNNING"
	EnclaveContainersStatusSTOPPED EnclaveContainersStatus = "STOPPED"
)

// Defines values for EnclaveMode.
const (
	PRODUCTION EnclaveMode = "PRODUCTION"
	TEST       EnclaveMode = "TEST"
)

// Defines values for LogLineOperator.
const (
	DOESCONTAINMATCHREGEX    LogLineOperator = "DOES_CONTAIN_MATCH_REGEX"
	DOESCONTAINTEXT          LogLineOperator = "DOES_CONTAIN_TEXT"
	DOESNOTCONTAINMATCHREGEX LogLineOperator = "DOES_NOT_CONTAIN_MATCH_REGEX"
	DOESNOTCONTAINTEXT       LogLineOperator = "DOES_NOT_CONTAIN_TEXT"
)

// ApiContainerStatus defines model for ApiContainerStatus.
type ApiContainerStatus string

// CreateEnclave defines model for CreateEnclave.
type CreateEnclave struct {
	ApiContainerLogLevel   *string      `json:"api_container_log_level,omitempty"`
	ApiContainerVersionTag *string      `json:"api_container_version_tag,omitempty"`
	EnclaveName            *string      `json:"enclave_name,omitempty"`
	Mode                   *EnclaveMode `json:"mode,omitempty"`
}

// DeletionSummary defines model for DeletionSummary.
type DeletionSummary struct {
	RemovedEnclaveNameAndUuids *[]EnclaveNameAndUuid `json:"removed_enclave_name_and_uuids,omitempty"`
}

// EnclaveAPIContainerHostMachineInfo defines model for EnclaveAPIContainerHostMachineInfo.
type EnclaveAPIContainerHostMachineInfo struct {
	GrpcPortOnHostMachine *int    `json:"grpc_port_on_host_machine,omitempty"`
	IpOnHostMachine       *string `json:"ip_on_host_machine,omitempty"`
}

// EnclaveAPIContainerInfo defines model for EnclaveAPIContainerInfo.
type EnclaveAPIContainerInfo struct {
	BridgeIpAddress       *string `json:"bridge_ip_address,omitempty"`
	ContainerId           *string `json:"container_id,omitempty"`
	GrpcPortInsideEnclave *int    `json:"grpc_port_inside_enclave,omitempty"`
	IpInsideEnclave       *string `json:"ip_inside_enclave,omitempty"`
}

// EnclaveContainersStatus defines model for EnclaveContainersStatus.
type EnclaveContainersStatus string

// EnclaveIdentifiers defines model for EnclaveIdentifiers.
type EnclaveIdentifiers struct {
	EnclaveUuid   *string `json:"enclave_uuid,omitempty"`
	Name          *string `json:"name,omitempty"`
	ShortenedUuid *string `json:"shortened_uuid,omitempty"`
}

// EnclaveInfo defines model for EnclaveInfo.
type EnclaveInfo struct {
	ApiContainerHostMachineInfo *EnclaveAPIContainerHostMachineInfo `json:"api_container_host_machine_info,omitempty"`
	ApiContainerInfo            *EnclaveAPIContainerInfo            `json:"api_container_info,omitempty"`
	ApiContainerStatus          *ApiContainerStatus                 `json:"api_container_status,omitempty"`
	ContainersStatus            *EnclaveContainersStatus            `json:"containers_status,omitempty"`
	CreationTime                *Timestamp                          `json:"creation_time,omitempty"`
	EnclaveUuid                 *string                             `json:"enclave_uuid,omitempty"`
	Mode                        *EnclaveMode                        `json:"mode,omitempty"`
	Name                        *string                             `json:"name,omitempty"`
	ShortenedUuid               *string                             `json:"shortened_uuid,omitempty"`
}

// EnclaveMode defines model for EnclaveMode.
type EnclaveMode string

// EnclaveNameAndUuid defines model for EnclaveNameAndUuid.
type EnclaveNameAndUuid struct {
	Name *string `json:"name,omitempty"`
	Uuid *string `json:"uuid,omitempty"`
}

// EngineInfo defines model for EngineInfo.
type EngineInfo struct {
	EngineVersion *string `json:"engine_version,omitempty"`
}

// GetServiceLogs defines model for GetServiceLogs.
type GetServiceLogs struct {
	ConjunctiveFilters *[]LogLineFilter `json:"conjunctive_filters,omitempty"`
	FollowLogs         *bool            `json:"follow_logs,omitempty"`
	NumLogLines        *int             `json:"num_log_lines,omitempty"`
	ReturnAllLogs      *bool            `json:"return_all_logs,omitempty"`
	ServiceUuidSet     *[]string        `json:"service_uuid_set,omitempty"`
}

// LogLine defines model for LogLine.
type LogLine struct {
	Line      *[]string  `json:"line,omitempty"`
	Timestamp *Timestamp `json:"timestamp,omitempty"`
}

// LogLineFilter defines model for LogLineFilter.
type LogLineFilter struct {
	Operator    *LogLineOperator `json:"operator,omitempty"`
	TextPattern *string          `json:"text_pattern,omitempty"`
}

// LogLineOperator defines model for LogLineOperator.
type LogLineOperator string

// ServiceLogs defines model for ServiceLogs.
type ServiceLogs struct {
	NotFoundServiceUuidSet   *[]string           `json:"not_found_service_uuid_set,omitempty"`
	ServiceLogsByServiceUuid *map[string]LogLine `json:"service_logs_by_service_uuid,omitempty"`
}

// Timestamp defines model for Timestamp.
type Timestamp = time.Time

// EnclaveIdentifier defines model for enclave_identifier.
type EnclaveIdentifier = string

// RemoveAll defines model for remove_all.
type RemoveAll = bool

// DeleteEnclavesParams defines parameters for DeleteEnclaves.
type DeleteEnclavesParams struct {
	// RemoveAll If true, remove all enclaves. Default is false
	RemoveAll *RemoveAll `form:"remove_all,omitempty" json:"remove_all,omitempty"`
}

// PostEnclavesJSONRequestBody defines body for PostEnclaves for application/json ContentType.
type PostEnclavesJSONRequestBody = CreateEnclave

// PostEnclavesEnclaveIdentifierLogsJSONRequestBody defines body for PostEnclavesEnclaveIdentifierLogs for application/json ContentType.
type PostEnclavesEnclaveIdentifierLogsJSONRequestBody = GetServiceLogs
