// Package kurtosis_engine_http_api_bindings provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version (devel) DO NOT EDIT.
package kurtosis_engine_http_api_bindings

import (
	"time"
)

// Defines values for CreateEnclaveArgsMode.
const (
	CreateEnclaveArgsModePRODUCTION CreateEnclaveArgsMode = "PRODUCTION"
	CreateEnclaveArgsModeTEST       CreateEnclaveArgsMode = "TEST"
)

// Defines values for EnclaveInfoMode.
const (
	EnclaveInfoModePRODUCTION EnclaveInfoMode = "PRODUCTION"
	EnclaveInfoModeTEST       EnclaveInfoMode = "TEST"
)

// CleanResponse defines model for CleanResponse.
type CleanResponse struct {
	RemovedEnclaveNameAndUuids *[]EnclaveNameAndUuid `json:"removed_enclave_name_and_uuids,omitempty"`
}

// CreateEnclaveArgs defines model for CreateEnclaveArgs.
type CreateEnclaveArgs struct {
	ApiContainerLogLevel   *string                `json:"api_container_log_level,omitempty"`
	ApiContainerVersionTag *string                `json:"api_container_version_tag,omitempty"`
	EnclaveName            *string                `json:"enclave_name,omitempty"`
	Mode                   *CreateEnclaveArgsMode `json:"mode,omitempty"`
}

// CreateEnclaveArgsMode defines model for CreateEnclaveArgs.Mode.
type CreateEnclaveArgsMode string

// CreateEnclaveResponse defines model for CreateEnclaveResponse.
type CreateEnclaveResponse struct {
	EnclaveInfo *EnclaveInfo `json:"enclave_info,omitempty"`
}

// EnclaveAPIContainerHostMachineInfo defines model for EnclaveAPIContainerHostMachineInfo.
type EnclaveAPIContainerHostMachineInfo struct {
	GrpcPortOnHostMachine *int    `json:"grpc_port_on_host_machine,omitempty"`
	IpOnHostMachine       *string `json:"ip_on_host_machine,omitempty"`
}

// EnclaveAPIContainerInfo defines model for EnclaveAPIContainerInfo.
type EnclaveAPIContainerInfo struct {
	BridgeIpAddress       *string `json:"bridge_ip_address,omitempty"`
	ContainerId           *string `json:"container_id,omitempty"`
	GrpcPortInsideEnclave *int    `json:"grpc_port_inside_enclave,omitempty"`
	IpInsideEnclave       *string `json:"ip_inside_enclave,omitempty"`
}

// EnclaveIdentifiers defines model for EnclaveIdentifiers.
type EnclaveIdentifiers struct {
	EnclaveUuid   *string `json:"enclave_uuid,omitempty"`
	Name          *string `json:"name,omitempty"`
	ShortenedUuid *string `json:"shortened_uuid,omitempty"`
}

// EnclaveInfo defines model for EnclaveInfo.
type EnclaveInfo struct {
	ApiContainerHostMachineInfo *EnclaveAPIContainerHostMachineInfo `json:"api_container_host_machine_info,omitempty"`
	ApiContainerInfo            *EnclaveAPIContainerInfo            `json:"api_container_info,omitempty"`
	ApiContainerStatus          *int                                `json:"api_container_status,omitempty"`
	ContainersStatus            *int                                `json:"containers_status,omitempty"`
	CreationTime                *Timestamp                          `json:"creation_time,omitempty"`
	EnclaveUuid                 *string                             `json:"enclave_uuid,omitempty"`
	Mode                        *EnclaveInfoMode                    `json:"mode,omitempty"`
	Name                        *string                             `json:"name,omitempty"`
	ShortenedUuid               *string                             `json:"shortened_uuid,omitempty"`
}

// EnclaveInfoMode defines model for EnclaveInfo.Mode.
type EnclaveInfoMode string

// EnclaveNameAndUuid defines model for EnclaveNameAndUuid.
type EnclaveNameAndUuid struct {
	Name *string `json:"name,omitempty"`
	Uuid *string `json:"uuid,omitempty"`
}

// GetEnclavesResponse defines model for GetEnclavesResponse.
type GetEnclavesResponse struct {
	EnclaveInfo *map[string]EnclaveInfo `json:"enclave_info,omitempty"`
}

// GetEngineInfoResponse defines model for GetEngineInfoResponse.
type GetEngineInfoResponse struct {
	EngineVersion *string `json:"engine_version,omitempty"`
}

// GetExistingAndHistoricalEnclaveIdentifiersResponse defines model for GetExistingAndHistoricalEnclaveIdentifiersResponse.
type GetExistingAndHistoricalEnclaveIdentifiersResponse struct {
	AllIdentifiers *[]EnclaveIdentifiers `json:"allIdentifiers,omitempty"`
}

// GetServiceLogsArgs defines model for GetServiceLogsArgs.
type GetServiceLogsArgs struct {
	ConjunctiveFilters *[]LogLineFilter `json:"conjunctive_filters,omitempty"`
	FollowLogs         *bool            `json:"follow_logs,omitempty"`
	NumLogLines        *int             `json:"num_log_lines,omitempty"`
	ReturnAllLogs      *bool            `json:"return_all_logs,omitempty"`
	ServiceUuidSet     *map[string]bool `json:"service_uuid_set,omitempty"`
}

// GetServiceLogsResponse defines model for GetServiceLogsResponse.
type GetServiceLogsResponse struct {
	NotFoundServiceUuidSet   *map[string]bool    `json:"not_found_service_uuid_set,omitempty"`
	ServiceLogsByServiceUuid *map[string]LogLine `json:"service_logs_by_service_uuid,omitempty"`
}

// LogLine defines model for LogLine.
type LogLine struct {
	Line      *[]string  `json:"line,omitempty"`
	Timestamp *Timestamp `json:"timestamp,omitempty"`
}

// LogLineFilter defines model for LogLineFilter.
type LogLineFilter struct {
	Operator    *int    `json:"operator,omitempty"`
	TextPattern *string `json:"text_pattern,omitempty"`
}

// Timestamp defines model for Timestamp.
type Timestamp = time.Time

// DeleteEnclavesParams defines parameters for DeleteEnclaves.
type DeleteEnclavesParams struct {
	// RemoveAll If true, remove all enclaves. Default is false
	RemoveAll *bool `form:"remove_all,omitempty" json:"remove_all,omitempty"`
}

// PostEnclavesJSONRequestBody defines body for PostEnclaves for application/json ContentType.
type PostEnclavesJSONRequestBody = CreateEnclaveArgs

// PostEnclavesEnclaveIdentifierLogsJSONRequestBody defines body for PostEnclavesEnclaveIdentifierLogs for application/json ContentType.
type PostEnclavesEnclaveIdentifierLogsJSONRequestBody = GetServiceLogsArgs
